[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello!! My name is Çağrı Durmaz.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project X",
    "section": "",
    "text": "Welcome to my/our project page.\nKeep an eye on this space to stay updated with my project activities.\n(The titles below are provided as examples; please feel free to adjust them as necessary.)"
  },
  {
    "objectID": "project.html#data-source",
    "href": "project.html#data-source",
    "title": "Project X",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nxxxxxx"
  },
  {
    "objectID": "project.html#general-information-about-data",
    "href": "project.html#general-information-about-data",
    "title": "Project X",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nxxxxxx"
  },
  {
    "objectID": "project.html#reason-of-choice",
    "href": "project.html#reason-of-choice",
    "title": "Project X",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nxxxxxx"
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "Project X",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nxxxxxx"
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "Project X",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "Project X",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "Project X",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "Project X",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Spring 2024-2025] EMU660 Decision Making with Analytics course.\nPlease use left menu to navigate through my assignments.\n\n\n\n Back to top",
    "crumbs": [
      "My Assignments"
    ]
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nBusiness Excellence & Continuous Improvement Lead Engineer , Roketsan 2018-ongoing\nIndustrial Engineer, Beko , 2014-2018"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm aaa, position xx, year xxx\nFirm bbb, position yyy, year yyy"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Çağrı Durmaz Blog",
    "section": "",
    "text": "“I am sharing my first blog post as part of a course assignment. I am pleased to be taking this course and to have the opportunity to develop myself. Gaining new knowledge and contributing to this platform is a valuable experience for me. I hope to continue sharing more content here in the future.” - 12.03.2025\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/assignments/assignment-1.html",
    "href": "docs/assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#a-mtcars-data-set",
    "href": "assignments/assignment-1.html#a-mtcars-data-set",
    "title": "Assignment 1",
    "section": "",
    "text": "Write a Custom Summary Function:\n\n\n# loading dataset\ndata(\"mtcars\")\n# 5 rows look\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n# compute_stats function\ncompute_stats &lt;- function(x) {\n  # input numeric control\n  if (!is.numeric(x)) {\n    stop(\"Input must be a numeric vector.\")\n  }\n  \n  # statistical calculations\n  mean_x   &lt;- mean(x)\n  median_x &lt;- median(x)\n  var_x    &lt;- var(x)\n  iqr_x    &lt;- IQR(x)\n  min_x    &lt;- min(x)\n  max_x    &lt;- max(x)\n  \n  # list results\n  stats_list &lt;- list(\n    mean      = mean_x,\n    median    = median_x,\n    variance  = var_x,\n    iqr       = iqr_x,\n    minimum   = min_x,\n    maximum   = max_x\n  )\n  \n  return(stats_list)\n}\n\n# Sample function : mtcars dataset mpg columns statistics \ncompute_stats(mtcars$mpg)\n\n$mean\n[1] 20.09062\n\n$median\n[1] 19.2\n\n$variance\n[1] 36.3241\n\n$iqr\n[1] 7.375\n\n$minimum\n[1] 10.4\n\n$maximum\n[1] 33.9",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#a-video-summary",
    "href": "assignments/assignment-1.html#a-video-summary",
    "title": "Assignment 1",
    "section": "(a) Video Summary:",
    "text": "(a) Video Summary:\nVideo Link\nMr. Cem Vardar, an accomplished Data Scientist, delves into the realm of prescriptive analytics and optimization. His expertise spans problem-solving, industrial engineering, and the latest trends in data analytics. Vardar also provides insights into the diverse data-related roles and the specific problem types that each role entails. Furthermore, he presents a comprehensive study that outlines the desired qualities and characteristics for data science roles. As a seasoned scientist, Vardar concludes his presentation with valuable suggestions, a reading list, and an interactive Q&A session, fostering a dynamic learning environment.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b-explore-statistical-summaries-with-custom-functions-and-iteration-methods",
    "href": "assignments/assignment-1.html#b-explore-statistical-summaries-with-custom-functions-and-iteration-methods",
    "title": "Assignment 1",
    "section": "(b) Explore Statistical Summaries with Custom Functions and Iteration Methods:",
    "text": "(b) Explore Statistical Summaries with Custom Functions and Iteration Methods:\n\nWrite a Custom Summary Function:\n\n\n# loading dataset\ndata(\"mtcars\")\n# 5 rows look\nhead(mtcars)\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n# compute_stats function\ncompute_stats &lt;- function(x) {\n  # input numeric control\n  if (!is.numeric(x)) {\n    stop(\"Input must be a numeric vector.\")\n  }\n  \n  # statistical calculations\n  mean_x   &lt;- mean(x)\n  median_x &lt;- median(x)\n  var_x    &lt;- var(x)\n  iqr_x    &lt;- IQR(x)\n  min_x    &lt;- min(x)\n  max_x    &lt;- max(x)\n  \n  # list results\n  stats_list &lt;- list(\n    mean      = mean_x,\n    median    = median_x,\n    variance  = var_x,\n    iqr       = iqr_x,\n    minimum   = min_x,\n    maximum   = max_x\n  )\n  \n  return(stats_list)\n}\n\n# Sample function : mtcars dataset mpg columns statistics \ncompute_stats(mtcars$mpg)\n\n$mean\n[1] 20.09062\n\n$median\n[1] 19.2\n\n$variance\n[1] 36.3241\n\n$iqr\n[1] 7.375\n\n$minimum\n[1] 10.4\n\n$maximum\n[1] 33.9\n\n\n\nApplying the Function Using a Loop:\n\n\nfor (col_name in names(mtcars)) {\n  # Check if the column is numeric\n  if (is.numeric(mtcars[[col_name]])) {\n    # Apply the compute_stats function to the column\n    stats &lt;- compute_stats(mtcars[[col_name]])\n    # Print the column name and computed statistics\n    cat(\"Column:\", col_name, \"\\n\")\n    print(stats)\n    cat(\"\\n\")  # Add a blank line for better readability\n  }\n}\n\nColumn: mpg \n$mean\n[1] 20.09062\n\n$median\n[1] 19.2\n\n$variance\n[1] 36.3241\n\n$iqr\n[1] 7.375\n\n$minimum\n[1] 10.4\n\n$maximum\n[1] 33.9\n\n\nColumn: cyl \n$mean\n[1] 6.1875\n\n$median\n[1] 6\n\n$variance\n[1] 3.189516\n\n$iqr\n[1] 4\n\n$minimum\n[1] 4\n\n$maximum\n[1] 8\n\n\nColumn: disp \n$mean\n[1] 230.7219\n\n$median\n[1] 196.3\n\n$variance\n[1] 15360.8\n\n$iqr\n[1] 205.175\n\n$minimum\n[1] 71.1\n\n$maximum\n[1] 472\n\n\nColumn: hp \n$mean\n[1] 146.6875\n\n$median\n[1] 123\n\n$variance\n[1] 4700.867\n\n$iqr\n[1] 83.5\n\n$minimum\n[1] 52\n\n$maximum\n[1] 335\n\n\nColumn: drat \n$mean\n[1] 3.596563\n\n$median\n[1] 3.695\n\n$variance\n[1] 0.2858814\n\n$iqr\n[1] 0.84\n\n$minimum\n[1] 2.76\n\n$maximum\n[1] 4.93\n\n\nColumn: wt \n$mean\n[1] 3.21725\n\n$median\n[1] 3.325\n\n$variance\n[1] 0.957379\n\n$iqr\n[1] 1.02875\n\n$minimum\n[1] 1.513\n\n$maximum\n[1] 5.424\n\n\nColumn: qsec \n$mean\n[1] 17.84875\n\n$median\n[1] 17.71\n\n$variance\n[1] 3.193166\n\n$iqr\n[1] 2.0075\n\n$minimum\n[1] 14.5\n\n$maximum\n[1] 22.9\n\n\nColumn: vs \n$mean\n[1] 0.4375\n\n$median\n[1] 0\n\n$variance\n[1] 0.2540323\n\n$iqr\n[1] 1\n\n$minimum\n[1] 0\n\n$maximum\n[1] 1\n\n\nColumn: am \n$mean\n[1] 0.40625\n\n$median\n[1] 0\n\n$variance\n[1] 0.2489919\n\n$iqr\n[1] 1\n\n$minimum\n[1] 0\n\n$maximum\n[1] 1\n\n\nColumn: gear \n$mean\n[1] 3.6875\n\n$median\n[1] 4\n\n$variance\n[1] 0.5443548\n\n$iqr\n[1] 1\n\n$minimum\n[1] 3\n\n$maximum\n[1] 5\n\n\nColumn: carb \n$mean\n[1] 2.8125\n\n$median\n[1] 2\n\n$variance\n[1] 2.608871\n\n$iqr\n[1] 2\n\n$minimum\n[1] 1\n\n$maximum\n[1] 8\n\n\n\nAn alternative approach with sapply and apply:\n\n\nstats_sapply &lt;- sapply(mtcars, compute_stats)\nstats_sapply\n\n         mpg      cyl      disp     hp       drat      wt       qsec    \nmean     20.09062 6.1875   230.7219 146.6875 3.596563  3.21725  17.84875\nmedian   19.2     6        196.3    123      3.695     3.325    17.71   \nvariance 36.3241  3.189516 15360.8  4700.867 0.2858814 0.957379 3.193166\niqr      7.375    4        205.175  83.5     0.84      1.02875  2.0075  \nminimum  10.4     4        71.1     52       2.76      1.513    14.5    \nmaximum  33.9     8        472      335      4.93      5.424    22.9    \n         vs        am        gear      carb    \nmean     0.4375    0.40625   3.6875    2.8125  \nmedian   0         0         4         2       \nvariance 0.2540323 0.2489919 0.5443548 2.608871\niqr      1         1         1         2       \nminimum  0         0         3         1       \nmaximum  1         1         5         8       \n\n\n\nmtcars_mat &lt;- as.matrix(mtcars)\n\n# margin=2 for columns\nstats_apply &lt;- apply(mtcars_mat, 2, compute_stats)\nstats_apply\n\n$mpg\n$mpg$mean\n[1] 20.09062\n\n$mpg$median\n[1] 19.2\n\n$mpg$variance\n[1] 36.3241\n\n$mpg$iqr\n[1] 7.375\n\n$mpg$minimum\n[1] 10.4\n\n$mpg$maximum\n[1] 33.9\n\n\n$cyl\n$cyl$mean\n[1] 6.1875\n\n$cyl$median\n[1] 6\n\n$cyl$variance\n[1] 3.189516\n\n$cyl$iqr\n[1] 4\n\n$cyl$minimum\n[1] 4\n\n$cyl$maximum\n[1] 8\n\n\n$disp\n$disp$mean\n[1] 230.7219\n\n$disp$median\n[1] 196.3\n\n$disp$variance\n[1] 15360.8\n\n$disp$iqr\n[1] 205.175\n\n$disp$minimum\n[1] 71.1\n\n$disp$maximum\n[1] 472\n\n\n$hp\n$hp$mean\n[1] 146.6875\n\n$hp$median\n[1] 123\n\n$hp$variance\n[1] 4700.867\n\n$hp$iqr\n[1] 83.5\n\n$hp$minimum\n[1] 52\n\n$hp$maximum\n[1] 335\n\n\n$drat\n$drat$mean\n[1] 3.596563\n\n$drat$median\n[1] 3.695\n\n$drat$variance\n[1] 0.2858814\n\n$drat$iqr\n[1] 0.84\n\n$drat$minimum\n[1] 2.76\n\n$drat$maximum\n[1] 4.93\n\n\n$wt\n$wt$mean\n[1] 3.21725\n\n$wt$median\n[1] 3.325\n\n$wt$variance\n[1] 0.957379\n\n$wt$iqr\n[1] 1.02875\n\n$wt$minimum\n[1] 1.513\n\n$wt$maximum\n[1] 5.424\n\n\n$qsec\n$qsec$mean\n[1] 17.84875\n\n$qsec$median\n[1] 17.71\n\n$qsec$variance\n[1] 3.193166\n\n$qsec$iqr\n[1] 2.0075\n\n$qsec$minimum\n[1] 14.5\n\n$qsec$maximum\n[1] 22.9\n\n\n$vs\n$vs$mean\n[1] 0.4375\n\n$vs$median\n[1] 0\n\n$vs$variance\n[1] 0.2540323\n\n$vs$iqr\n[1] 1\n\n$vs$minimum\n[1] 0\n\n$vs$maximum\n[1] 1\n\n\n$am\n$am$mean\n[1] 0.40625\n\n$am$median\n[1] 0\n\n$am$variance\n[1] 0.2489919\n\n$am$iqr\n[1] 1\n\n$am$minimum\n[1] 0\n\n$am$maximum\n[1] 1\n\n\n$gear\n$gear$mean\n[1] 3.6875\n\n$gear$median\n[1] 4\n\n$gear$variance\n[1] 0.5443548\n\n$gear$iqr\n[1] 1\n\n$gear$minimum\n[1] 3\n\n$gear$maximum\n[1] 5\n\n\n$carb\n$carb$mean\n[1] 2.8125\n\n$carb$median\n[1] 2\n\n$carb$variance\n[1] 2.608871\n\n$carb$iqr\n[1] 2\n\n$carb$minimum\n[1] 1\n\n$carb$maximum\n[1] 8",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "(b)",
    "text": "(b)",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#c-na_example-dataset",
    "href": "assignments/assignment-1.html#c-na_example-dataset",
    "title": "Assignment 1",
    "section": "(c) “na_example” dataset :",
    "text": "(c) “na_example” dataset :\n\n# Load the dslabs package and the na_example dataset\nlibrary(dslabs)\ndata(\"na_example\")\n\n# Display the dataset's contents (including NA values)\ncat(\"Original na_example dataset:\\n\")\n\nOriginal na_example dataset:\n\nprint(na_example)\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\n# Report the total count of NA values and their index positions\nna_count &lt;- sum(is.na(na_example))\nna_positions &lt;- which(is.na(na_example))\ncat(\"\\nTotal count of NA values:\", na_count, \"\\n\")\n\n\nTotal count of NA values: 145 \n\ncat(\"Index positions of NA values:\", na_positions, \"\\n\")\n\nIndex positions of NA valuesn\n# Compute mean and standard deviation of the original dataset (ignoring NAs)\noriginal_mean &lt;- mean(na_example, na.rm = TRUE)\noriginal_sd &lt;- sd(na_example, na.rm = TRUE)\ncat(\"\\nOriginal dataset (ignoring NAs):\\n\")\n\n\nOriginal dataset (ignoring NAs):\n\ncat(\"Mean:\", original_mean, \"\\n\")\n\nMean: 2.301754 \n\ncat(\"Standard deviation:\", original_sd, \"\\n\")\n\nStandard deviation: 1.22338 \n\n# Version 1: Replace NA values with the median of non-missing values\nmedian_value &lt;- median(na_example, na.rm = TRUE)\nversion1 &lt;- na_example\nversion1[is.na(version1)] &lt;- median_value\n\n# Version 2: Replace NA values with a randomly selected non-missing value\nnon_missing &lt;- na_example[!is.na(na_example)]\nrandom_values &lt;- sample(non_missing, size = na_count, replace = TRUE)\nversion2 &lt;- na_example\nversion2[is.na(version2)] &lt;- random_values\n\n# Compute mean and standard deviation for both modified versions\nversion1_mean &lt;- mean(version1)\nversion1_sd &lt;- sd(version1)\nversion2_mean &lt;- mean(version2)\nversion2_sd &lt;- sd(version2)\n\n# Display results for Version 1\ncat(\"\\nVersion 1 (NA replaced with median):\\n\")\n\n\nVersion 1 (NA replaced with median):\n\ncat(\"Mean:\", version1_mean, \"\\n\")\n\nMean: 2.258 \n\ncat(\"Standard deviation:\", version1_sd, \"\\n\")\n\nStandard deviation: 1.136102 \n\n# Display results for Version 2\ncat(\"\\nVersion 2 (NA replaced with random values):\\n\")\n\n\nVersion 2 (NA replaced with random values):\n\ncat(\"Mean:\", version2_mean, \"\\n\")\n\nMean: 2.331 \n\ncat(\"Standard deviation:\", version2_sd, \"\\n\")\n\nStandard deviation: 1.219396 \n\n# Comparison and explanation\ncat(\"\\nComparison of Results:\\n\")\n\n\nComparison of Results:\n\ncat(\"Original Mean (ignoring NAs):\", original_mean, \" | SD:\", original_sd, \"\\n\")\n\nOriginal Mean (ignoring NAs): 2.301754  | SD: 1.22338 \n\ncat(\"Version 1 Mean (median fill):\", version1_mean, \" | SD:\", version1_sd, \"\\n\")\n\nVersion 1 Mean (median fill): 2.258  | SD: 1.136102 \n\ncat(\"Version 2 Mean (random fill):\", version2_mean, \" | SD:\", version2_sd, \"\\n\")\n\nVersion 2 Mean (random fill): 2.331  | SD: 1.219396 \n\n\nExplanation:\n\nThe ‘na_example’ dataset is a simple integer vector with some missing values.\nReplacing NAs with the median (Version 1) keeps the central tendency stable but reduces variability (lower SD), as it fills all missing values with a single number.\nReplacing NAs with random values (Version 2) maintains more of the original variability (SD closer to original) but may shift the mean depending on the random values chosen.\nFor this dataset, Version 2 might be more appropriate if preserving variability is important, while Version 1 is better if maintaining a consistent central tendency is the priority.",
    "crumbs": [
      "Assignment 1"
    ]
  }
]